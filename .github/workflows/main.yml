name: Release

on:
  push:
    branches:
      - main

jobs:
  crawl:
    name: Crawl Domains
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
      
      - name: Env
        run: |
          echo "TAG_NAME=$(date +%Y/%m/%d)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y/%m/%d)" >> $GITHUB_ENV
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run python program
        run: |
          python src/main.py

      - name: Archive Generated domains
        uses: actions/upload-artifact@v2
        with:
          name: generated-domains
          path: |
            data/ir_domains.txt
            data/other_domains.txt
            
      - name: Upload result as release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "data/*.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}

  v2ray:
    name: V2ray Dat File
    needs: crawl
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Download result of crawl job
        uses: actions/download-artifact@v2
        with:
          name: generated-domains
          
      - name: Set $GOPATH and more variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "REPO_URL=github.com/${{ github.repository }}" >> $GITHUB_ENV
          echo "V2FLY_URL=github.com/v2fly/domain-list-community" >> $GITHUB_ENV
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Go get project code
        run: |
          go get -v ${{ env.V2FLY_URL }}
          
      - name: Build dlc.dat file
        run: |
          rm -r ${{ env.GOPATH }}/src/${{ env.V2FLY_URL }}/data
          cat ir_domains.txt > ${{ env.GOPATH }}/src/${{ env.V2FLY_URL }}/data
          cat other_domains.txt > ${{ env.GOPATH }}/src/${{ env.V2FLY_URL }}/data
          domain-list-community --datapath=${{ env.GOPATH }}/src/${{ env.V2FLY_URL }}/data
                    
      - name: Archive result
        uses: actions/upload-artifact@v2
        with:
          name: generated-dat
          path: |
            dlc.dat
